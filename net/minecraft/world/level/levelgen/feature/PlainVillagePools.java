package net.minecraft.world.level.levelgen.feature;

import net.minecraft.world.level.block.state.AbstractStateHolder;
import net.minecraft.world.level.levelgen.feature.structures.FeaturePoolElement;
import net.minecraft.world.level.levelgen.feature.structures.EmptyPoolElement;
import net.minecraft.world.level.levelgen.feature.structures.StructurePoolElement;
import net.minecraft.world.level.levelgen.feature.structures.StructureTemplatePool;
import com.mojang.datafixers.util.Pair;
import net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor;
import net.minecraft.world.level.levelgen.feature.structures.SinglePoolElement;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.levelgen.feature.structures.JigsawPlacement;
import java.util.List;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor;
import com.google.common.collect.ImmutableList;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest;
import net.minecraft.world.level.block.state.properties.Property;
import net.minecraft.world.level.block.IronBarsBlock;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule;
import net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest;
import net.minecraft.world.level.block.Blocks;

public class PlainVillagePools {
    public static void bootstrap() {
    }
    
    static {
        final ImmutableList<StructureProcessor> immutableList1 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.8f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()), (Object)new ProcessorRule(new TagMatchTest(BlockTags.DOORS), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.TORCH), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.WALL_TORCH), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.07f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.MOSSY_COBBLESTONE, 0.07f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHITE_TERRACOTTA, 0.07f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.OAK_LOG, 0.05f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.OAK_PLANKS, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.OAK_STAIRS, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.STRIPPED_OAK_LOG, 0.02f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.GLASS_PANE, 0.5f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object[])new ProcessorRule[] { new ProcessorRule(new BlockStateMatchTest((((AbstractStateHolder<O, BlockState>)Blocks.GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.NORTH, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.SOUTH, true)), AlwaysTrueTest.INSTANCE, (((AbstractStateHolder<O, BlockState>)Blocks.BROWN_STAINED_GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.NORTH, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.SOUTH, true)), new ProcessorRule(new BlockStateMatchTest((((AbstractStateHolder<O, BlockState>)Blocks.GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.EAST, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.WEST, true)), AlwaysTrueTest.INSTANCE, (((AbstractStateHolder<O, BlockState>)Blocks.BROWN_STAINED_GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.EAST, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.WEST, true)), new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.3f), AlwaysTrueTest.INSTANCE, Blocks.CARROTS.defaultBlockState()), new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.POTATOES.defaultBlockState()), new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.BEETROOTS.defaultBlockState()) })));
        final ImmutableList<StructureProcessor> immutableList2 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()))));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/town_centers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/town_centers/plains_fountain_01", (List<StructureProcessor>)ImmutableList.of((Object)new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()))))), (Object)50), new Pair((Object)new SinglePoolElement("village/plains/town_centers/plains_meeting_point_1", (List<StructureProcessor>)ImmutableList.of((Object)new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()))))), (Object)50), new Pair((Object)new SinglePoolElement("village/plains/town_centers/plains_meeting_point_2"), (Object)50), new Pair((Object)new SinglePoolElement("village/plains/town_centers/plains_meeting_point_3", (List<StructureProcessor>)ImmutableList.of((Object)new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.7f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()))))), (Object)50), new Pair((Object)new SinglePoolElement("village/plains/zombie/town_centers/plains_fountain_01", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/town_centers/plains_meeting_point_1", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/town_centers/plains_meeting_point_2", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/town_centers/plains_meeting_point_3", (List<StructureProcessor>)immutableList1), (Object)1)), StructureTemplatePool.Projection.RIGID));
        final ImmutableList<StructureProcessor> immutableList3 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new BlockMatchTest(Blocks.GRASS_PATH), new BlockMatchTest(Blocks.WATER), Blocks.OAK_PLANKS.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.GRASS_PATH, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.GRASS_BLOCK.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.GRASS_BLOCK), new BlockMatchTest(Blocks.WATER), Blocks.WATER.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.DIRT), new BlockMatchTest(Blocks.WATER), Blocks.WATER.defaultBlockState()))));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/streets"), new ResourceLocation("village/plains/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/streets/corner_01", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/streets/corner_02", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/streets/corner_03", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_01", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_02", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_03", (List<StructureProcessor>)immutableList3), (Object)7), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_04", (List<StructureProcessor>)immutableList3), (Object)7), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_05", (List<StructureProcessor>)immutableList3), (Object)3), new Pair((Object)new SinglePoolElement("village/plains/streets/straight_06", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/streets/crossroad_01", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/streets/crossroad_02", (List<StructureProcessor>)immutableList3), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/streets/crossroad_03", (List<StructureProcessor>)immutableList3), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/plains/streets/crossroad_04", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/streets/crossroad_05", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/streets/crossroad_06", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/streets/turn_01", (List<StructureProcessor>)immutableList3), 3) }), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/zombie/streets"), new ResourceLocation("village/plains/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/corner_01", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/corner_02", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/corner_03", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_01", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_02", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_03", (List<StructureProcessor>)immutableList3), (Object)7), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_04", (List<StructureProcessor>)immutableList3), (Object)7), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_05", (List<StructureProcessor>)immutableList3), (Object)3), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/straight_06", (List<StructureProcessor>)immutableList3), (Object)4), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/crossroad_01", (List<StructureProcessor>)immutableList3), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/crossroad_02", (List<StructureProcessor>)immutableList3), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/streets/crossroad_03", (List<StructureProcessor>)immutableList3), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/plains/zombie/streets/crossroad_04", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/zombie/streets/crossroad_05", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/zombie/streets/crossroad_06", (List<StructureProcessor>)immutableList3), 2), new Pair(new SinglePoolElement("village/plains/zombie/streets/turn_01", (List<StructureProcessor>)immutableList3), 3) }), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        final ImmutableList<StructureProcessor> immutableList4 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.3f), AlwaysTrueTest.INSTANCE, Blocks.CARROTS.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.POTATOES.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.BEETROOTS.defaultBlockState()))));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/houses"), new ResourceLocation("village/plains/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_1", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_2", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_3", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_4", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_5", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_6", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_7", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_small_house_8", (List<StructureProcessor>)immutableList2), (Object)3), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_medium_house_1", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_medium_house_2", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_big_house_1", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_butcher_shop_1", (List<StructureProcessor>)immutableList2), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/plains/houses/plains_butcher_shop_2", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_tool_smith_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_fletcher_house_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_shepherds_house_1"), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_armorer_house_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_fisher_cottage_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_tannery_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_cartographer_1", (List<StructureProcessor>)immutableList2), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_library_1", (List<StructureProcessor>)immutableList2), 5), new Pair(new SinglePoolElement("village/plains/houses/plains_library_2", (List<StructureProcessor>)immutableList2), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_masons_house_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_weaponsmith_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_temple_3", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_temple_4", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_stable_1", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_stable_2"), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_large_farm_1", (List<StructureProcessor>)immutableList4), 4), new Pair(new SinglePoolElement("village/plains/houses/plains_small_farm_1", (List<StructureProcessor>)immutableList4), 4), new Pair(new SinglePoolElement("village/plains/houses/plains_animal_pen_1"), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_animal_pen_2"), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_animal_pen_3"), 5), new Pair(new SinglePoolElement("village/plains/houses/plains_accessory_1"), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_meeting_point_4", (List<StructureProcessor>)ImmutableList.of((Object)new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.COBBLESTONE, 0.7f), AlwaysTrueTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.defaultBlockState()))))), 3), new Pair(new SinglePoolElement("village/plains/houses/plains_meeting_point_5"), 1), Pair.of(EmptyPoolElement.INSTANCE, 10) }), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/zombie/houses"), new ResourceLocation("village/plains/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_1", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_2", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_3", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_4", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_5", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_6", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_7", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_small_house_8", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_medium_house_1", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_medium_house_2", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/zombie/houses/plains_big_house_1", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/plains/houses/plains_butcher_shop_1", (List<StructureProcessor>)immutableList1), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_butcher_shop_2", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_tool_smith_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_fletcher_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_shepherds_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_armorer_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_fisher_cottage_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_tannery_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_cartographer_1", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_library_1", (List<StructureProcessor>)immutableList1), 3), new Pair(new SinglePoolElement("village/plains/houses/plains_library_2", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_masons_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_weaponsmith_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_temple_3", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_temple_4", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_stable_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_stable_2", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/plains/houses/plains_large_farm_1", (List<StructureProcessor>)immutableList1), 4), new Pair(new SinglePoolElement("village/plains/houses/plains_small_farm_1", (List<StructureProcessor>)immutableList1), 4), new Pair(new SinglePoolElement("village/plains/houses/plains_animal_pen_1", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/plains/houses/plains_animal_pen_2", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_animal_pen_3", (List<StructureProcessor>)immutableList1), 5), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_meeting_point_4", (List<StructureProcessor>)immutableList1), 3), new Pair(new SinglePoolElement("village/plains/zombie/houses/plains_meeting_point_5", (List<StructureProcessor>)immutableList1), 1), Pair.of(EmptyPoolElement.INSTANCE, 10) }), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/terminators"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_01", (List<StructureProcessor>)immutableList3), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_02", (List<StructureProcessor>)immutableList3), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_03", (List<StructureProcessor>)immutableList3), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_04", (List<StructureProcessor>)immutableList3), (Object)1)), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/trees"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.NORMAL_TREE, FeatureConfiguration.NONE)), (Object)1)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/decor"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/plains_lamp_1"), (Object)2), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.NORMAL_TREE, FeatureConfiguration.NONE)), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.PLAIN_FLOWER, FeatureConfiguration.NONE)), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.HAY_PILE, FeatureConfiguration.NONE)), (Object)1), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)2)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/zombie/decor"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/plains_lamp_1", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.NORMAL_TREE, FeatureConfiguration.NONE)), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.PLAIN_FLOWER, FeatureConfiguration.NONE)), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.HAY_PILE, FeatureConfiguration.NONE)), (Object)1), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)2)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/villagers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/villagers/nitwit"), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/villagers/baby"), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/villagers/unemployed"), (Object)10)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/plains/zombie/villagers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/zombie/villagers/nitwit"), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/zombie/villagers/unemployed"), (Object)10)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/animals"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/animals/cows_1"), (Object)7), new Pair((Object)new SinglePoolElement("village/common/animals/pigs_1"), (Object)7), new Pair((Object)new SinglePoolElement("village/common/animals/horses_1"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/horses_2"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/horses_3"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/horses_4"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/horses_5"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/sheep_1"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/sheep_2"), (Object)1), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)5)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/sheep"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/animals/sheep_1"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/sheep_2"), (Object)1)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/cats"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/animals/cat_black"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_british"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_calico"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_persian"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_ragdoll"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_red"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_siamese"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_tabby"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_white"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/cat_jellie"), (Object)1), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)3)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/butcher_animals"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/animals/cows_1"), (Object)3), new Pair((Object)new SinglePoolElement("village/common/animals/pigs_1"), (Object)3), new Pair((Object)new SinglePoolElement("village/common/animals/sheep_1"), (Object)1), new Pair((Object)new SinglePoolElement("village/common/animals/sheep_2"), (Object)1)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/iron_golem"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/iron_golem"), (Object)1)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/common/well_bottoms"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/common/well_bottom"), (Object)1)), StructureTemplatePool.Projection.RIGID));
    }
}
