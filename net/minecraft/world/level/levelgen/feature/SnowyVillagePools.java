package net.minecraft.world.level.levelgen.feature;

import net.minecraft.world.level.block.state.AbstractStateHolder;
import net.minecraft.world.level.levelgen.feature.structures.FeaturePoolElement;
import net.minecraft.world.level.levelgen.feature.structures.EmptyPoolElement;
import net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor;
import net.minecraft.world.level.levelgen.feature.structures.StructurePoolElement;
import net.minecraft.world.level.levelgen.feature.structures.StructureTemplatePool;
import com.mojang.datafixers.util.Pair;
import net.minecraft.world.level.levelgen.feature.structures.SinglePoolElement;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.levelgen.feature.structures.JigsawPlacement;
import java.util.List;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor;
import com.google.common.collect.ImmutableList;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest;
import net.minecraft.world.level.block.state.properties.Property;
import net.minecraft.world.level.block.IronBarsBlock;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;
import net.minecraft.tags.BlockTags;

public class SnowyVillagePools {
    public static void bootstrap() {
    }
    
    static {
        final ImmutableList<StructureProcessor> immutableList1 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new TagMatchTest(BlockTags.DOORS), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.TORCH), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.WALL_TORCH), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.LANTERN), AlwaysTrueTest.INSTANCE, Blocks.AIR.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.SPRUCE_PLANKS, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.SPRUCE_SLAB, 0.4f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.STRIPPED_SPRUCE_LOG, 0.05f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.STRIPPED_SPRUCE_WOOD, 0.05f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.GLASS_PANE, 0.5f), AlwaysTrueTest.INSTANCE, Blocks.COBWEB.defaultBlockState()), (Object)new ProcessorRule(new BlockStateMatchTest((((AbstractStateHolder<O, BlockState>)Blocks.GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.NORTH, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.SOUTH, true)), AlwaysTrueTest.INSTANCE, (((AbstractStateHolder<O, BlockState>)Blocks.BROWN_STAINED_GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.NORTH, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.SOUTH, true)), (Object)new ProcessorRule(new BlockStateMatchTest((((AbstractStateHolder<O, BlockState>)Blocks.GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.EAST, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.WEST, true)), AlwaysTrueTest.INSTANCE, (((AbstractStateHolder<O, BlockState>)Blocks.BROWN_STAINED_GLASS_PANE.defaultBlockState()).setValue((Property<Comparable>)IronBarsBlock.EAST, true)).<Comparable, Boolean>setValue((Property<Comparable>)IronBarsBlock.WEST, true)), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.CARROTS.defaultBlockState()), (Object[])new ProcessorRule[] { new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.8f), AlwaysTrueTest.INSTANCE, Blocks.POTATOES.defaultBlockState()) })));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/town_centers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/town_centers/snowy_meeting_point_1"), (Object)100), new Pair((Object)new SinglePoolElement("village/snowy/town_centers/snowy_meeting_point_2"), (Object)50), new Pair((Object)new SinglePoolElement("village/snowy/town_centers/snowy_meeting_point_3"), (Object)150), new Pair((Object)new SinglePoolElement("village/snowy/zombie/town_centers/snowy_meeting_point_1"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/town_centers/snowy_meeting_point_2"), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/zombie/town_centers/snowy_meeting_point_3"), (Object)3)), StructureTemplatePool.Projection.RIGID));
        final ImmutableList<StructureProcessor> immutableList2 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new BlockMatchTest(Blocks.GRASS_PATH), new BlockMatchTest(Blocks.WATER), Blocks.SPRUCE_PLANKS.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.GRASS_PATH, 0.2f), AlwaysTrueTest.INSTANCE, Blocks.GRASS_BLOCK.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.GRASS_BLOCK), new BlockMatchTest(Blocks.WATER), Blocks.WATER.defaultBlockState()), (Object)new ProcessorRule(new BlockMatchTest(Blocks.DIRT), new BlockMatchTest(Blocks.WATER), Blocks.WATER.defaultBlockState()))));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/streets"), new ResourceLocation("village/snowy/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/streets/corner_01", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/streets/corner_02", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/streets/corner_03", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/streets/square_01", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_01", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_02", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_03", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_04", (List<StructureProcessor>)immutableList2), (Object)7), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_06", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/streets/straight_08", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/streets/crossroad_02", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/streets/crossroad_03", (List<StructureProcessor>)immutableList2), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/snowy/streets/crossroad_04", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/streets/crossroad_05", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/streets/crossroad_06", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/streets/turn_01", (List<StructureProcessor>)immutableList2), 3) }), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/zombie/streets"), new ResourceLocation("village/snowy/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/corner_01", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/corner_02", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/corner_03", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/square_01", (List<StructureProcessor>)immutableList2), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_01", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_02", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_03", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_04", (List<StructureProcessor>)immutableList2), (Object)7), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_06", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/straight_08", (List<StructureProcessor>)immutableList2), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/crossroad_02", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/zombie/streets/crossroad_03", (List<StructureProcessor>)immutableList2), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/snowy/zombie/streets/crossroad_04", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/zombie/streets/crossroad_05", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/zombie/streets/crossroad_06", (List<StructureProcessor>)immutableList2), 2), new Pair(new SinglePoolElement("village/snowy/zombie/streets/turn_01", (List<StructureProcessor>)immutableList2), 3) }), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        final ImmutableList<StructureProcessor> immutableList3 = (ImmutableList<StructureProcessor>)ImmutableList.of(new RuleProcessor((List<ProcessorRule>)ImmutableList.of((Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.1f), AlwaysTrueTest.INSTANCE, Blocks.CARROTS.defaultBlockState()), (Object)new ProcessorRule(new RandomBlockMatchTest(Blocks.WHEAT, 0.8f), AlwaysTrueTest.INSTANCE, Blocks.POTATOES.defaultBlockState()))));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/houses"), new ResourceLocation("village/snowy/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_1"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_2"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_3"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_4"), (Object)3), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_5"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_6"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_7"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_small_house_8"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_medium_house_1"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_medium_house_2"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_medium_house_3"), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_butchers_shop_1"), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/snowy/houses/snowy_butchers_shop_2"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_tool_smith_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_fletcher_house_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_shepherds_house_1"), 3), new Pair(new SinglePoolElement("village/snowy/houses/snowy_armorer_house_1"), 1), new Pair(new SinglePoolElement("village/snowy/houses/snowy_armorer_house_2"), 1), new Pair(new SinglePoolElement("village/snowy/houses/snowy_fisher_cottage"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_tannery_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_cartographer_house_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_library_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_masons_house_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_masons_house_2"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_weapon_smith_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_temple_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_farm_1", (List<StructureProcessor>)immutableList3), 3), new Pair(new SinglePoolElement("village/snowy/houses/snowy_farm_2", (List<StructureProcessor>)immutableList3), 3), new Pair(new SinglePoolElement("village/snowy/houses/snowy_animal_pen_1"), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_animal_pen_2"), 2), Pair.of(EmptyPoolElement.INSTANCE, 6) }), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/zombie/houses"), new ResourceLocation("village/snowy/terminators"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_1", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_2", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_3", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_4", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_5", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_6", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_7", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_small_house_8", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_medium_house_1", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_medium_house_2", (List<StructureProcessor>)immutableList1), (Object)2), new Pair((Object)new SinglePoolElement("village/snowy/zombie/houses/snowy_medium_house_3", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/houses/snowy_butchers_shop_1", (List<StructureProcessor>)immutableList1), (Object)2), (Object[])new Pair[] { new Pair(new SinglePoolElement("village/snowy/houses/snowy_butchers_shop_2", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_tool_smith_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_fletcher_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_shepherds_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_armorer_house_1", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/snowy/houses/snowy_armorer_house_2", (List<StructureProcessor>)immutableList1), 1), new Pair(new SinglePoolElement("village/snowy/houses/snowy_fisher_cottage", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_tannery_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_cartographer_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_library_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_masons_house_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_masons_house_2", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_weapon_smith_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_temple_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_farm_1", (List<StructureProcessor>)immutableList1), 3), new Pair(new SinglePoolElement("village/snowy/houses/snowy_farm_2", (List<StructureProcessor>)immutableList1), 3), new Pair(new SinglePoolElement("village/snowy/houses/snowy_animal_pen_1", (List<StructureProcessor>)immutableList1), 2), new Pair(new SinglePoolElement("village/snowy/houses/snowy_animal_pen_2", (List<StructureProcessor>)immutableList1), 2), Pair.of(EmptyPoolElement.INSTANCE, 6) }), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/terminators"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_01", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_02", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_03", (List<StructureProcessor>)immutableList2), (Object)1), new Pair((Object)new SinglePoolElement("village/plains/terminators/terminator_04", (List<StructureProcessor>)immutableList2), (Object)1)), StructureTemplatePool.Projection.TERRAIN_MATCHING));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/trees"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.SPRUCE_TREE, FeatureConfiguration.NONE)), (Object)1)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/decor"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_01"), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_02"), (Object)4), new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_03"), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.SPRUCE_TREE, FeatureConfiguration.NONE)), (Object)4), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.SNOW_PILE, FeatureConfiguration.NONE)), (Object)4), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.ICE_PILE, FeatureConfiguration.NONE)), (Object)1), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)9)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/zombie/decor"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_01", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_02", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/snowy_lamp_post_03", (List<StructureProcessor>)immutableList1), (Object)1), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.SPRUCE_TREE, FeatureConfiguration.NONE)), (Object)4), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.SNOW_PILE, FeatureConfiguration.NONE)), (Object)4), new Pair((Object)new FeaturePoolElement(new ConfiguredFeature<>(Feature.ICE_PILE, FeatureConfiguration.NONE)), (Object)4), Pair.of((Object)EmptyPoolElement.INSTANCE, (Object)7)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/villagers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/villagers/nitwit"), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/villagers/baby"), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/villagers/unemployed"), (Object)10)), StructureTemplatePool.Projection.RIGID));
        JigsawPlacement.POOLS.register(new StructureTemplatePool(new ResourceLocation("village/snowy/zombie/villagers"), new ResourceLocation("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of(new Pair((Object)new SinglePoolElement("village/snowy/zombie/villagers/nitwit"), (Object)1), new Pair((Object)new SinglePoolElement("village/snowy/zombie/villagers/unemployed"), (Object)10)), StructureTemplatePool.Projection.RIGID));
    }
}
